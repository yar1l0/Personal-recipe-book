generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  BREAKFAST
  LUNCH
  DINNER
  DESSERT
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  name         String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  recipes      Recipe[]
  mealPlans    MealPlan[]
  shoppingList ShoppingList?

  @@map("users")
}

model Recipe {
  id           String     @id @default(uuid())
  userId       String
  title        String
  category     Category
  difficulty   Difficulty
  cookingTime  Int
  servings     Int
  photo        String?
  ingredients  Json
  instructions Json
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  mealPlans    MealPlan[]

  @@index([userId])
  @@index([category])
  @@index([difficulty])
  @@map("recipes")
}

model MealPlan {
  id        String   @id @default(uuid())
  userId    String
  recipeId  String
  date      DateTime
  mealType  MealType
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([date])
  @@map("meal_plans")
}

model ShoppingList {
  id     String         @id @default(uuid())
  userId String         @unique
  items  ShoppingItem[]
  user   User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("shopping_lists")
}

model ShoppingItem {
  id             String       @id @default(uuid())
  shoppingListId String
  ingredient     String
  amount         Float
  unit           String
  checked        Boolean      @default(false)
  shoppingList   ShoppingList @relation(fields: [shoppingListId], references: [id], onDelete: Cascade)

  @@index([shoppingListId])
  @@map("shopping_items")
}